#############################################################
########### after the ProtGPT2 model is finetuned ###########
#############################################################
from transformers import pipeline
from evaluate import load
import pandas as pd
import numpy as np
import pickle

########### peptides generated by non-finetuned ProtGPT2 ###########
protgpt2 = pipeline('text-generation', model="nferruz/ProtGPT2")

def gpt_generate(starter_seq, max_length, min_length):
    sequences = protgpt2(starter_seq, max_length=max_length, min_length = min_length,
                      do_sample=True, top_k=950, repetition_penalty=1.2,
                      num_return_sequences=1, eos_token_id=0)
    sequences = [i['generated_text'] for i in sequences]
    sequences = [i.replace('\n', '') for i in sequences]
    sequences = [i for i in sequences if i != 'M']
    return sequences

protgpt2_shorts = []
for i in range(3000):
    seq = gpt_generate('', 20, 6)
    protgpt2_shorts += seq
    if i % 100 == 0:
        print(i)

protgpt2_shorts = pd.DataFrame({'seq':protgpt2_shorts})
protgpt2_shorts.to_csv('protgpt2_shorts.csv', index = False)

#################################################################
########### peptides generated by finetuned ProtGPT2  ###########
#################################################################
#please specify the finetune output's path first ('FINETUNE_OUT')
model = pipeline('text-generation', model=FINETUNE_OUT)

def gpt_generate(starter_seq, max_length, min_length):
    sequences = model(starter_seq, max_length=max_length, min_length = min_length,
                      do_sample=True, top_k=950, repetition_penalty=1.2,
                      num_return_sequences=1, eos_token_id=0)
    sequences = [i['generated_text'] for i in sequences]
    sequences = [i.replace('\n', '') for i in sequences]
    sequences = [i for i in sequences if i != 'M']
    return sequences

amp_gen_seqs = []
for i in range(3000):
    seq = gpt_generate('', 20, 6)
    amp_gen_seqs += seq
    if i % 100 == 0:
        print(i)

amp_gen_seqs = pd.DataFrame({'seq':amp_gen_seqs})
amp_gen_seqs.to_csv('amp_gen_seqs.csv', index = False)








